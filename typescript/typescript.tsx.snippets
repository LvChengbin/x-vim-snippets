# define variables


snippet "~im?.mui.button" "import Button from '@material-ui/core/Button'" r
import Button from '@material-ui/core/Button';
${0:${VISUAL}}
endsnippet

snippet "~im?.mui.textfield" "import TextField from '@material-ui/core/TextField'" r
import TextField from '@material-ui/core/TextField';
${0:${VISUAL}}
endsnippet

snippet "~im?.mui.checkbox" "import Checkbox from '@material-ui/core/Checkbox'" r
import Checkbox from '@material-ui/core/Checkbox';
${0:${VISUAL}}
endsnippet

snippet ~react.i "initialize code for a react component"
import React from 'react';

export default function ${1}( props: ${2} ): JSX.Element {
	return (
		<${3}>
		</${3}>
	);
}
endsnippet

snippet react.c "create a react function component"
import React from 'react';
import clsx from 'clsx';
import msx from '@nextseason/msx';
import ${1:Box}, { $1Props } from '@mui/material/$1';

export interface ${2}Props extends $1Props {
}

export default function $2( props: $2Props ): JSX.Element {

	const { sx, className, ...rest } = props;

	return (
		<$1 className={clsx( className )} sx={msx( sx )} {...rest}>
			${0:${VISUAL}}
		</$1>
	);
}
endsnippet

snippet ~react.h.us "const [ x, setX ] = React.useState( v )"
const [ ${1}, set${1/\w+/\u$0/g} ] = React.useState( ${2:null} );
endsnippet

snippet ~react.h.ur "const xRef = React.useRef()"
const ${1} = React.useRef(${2});
endsnippet

snippet ~react.h.ue "React.useEffect( () => {} );"
React.useEffect( () => {	
	${0:${VISUAL}}
}${1} );
endsnippet
